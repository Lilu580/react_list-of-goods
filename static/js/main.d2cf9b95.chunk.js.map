{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","reset","this","addResetButton","goodsToShow","goods","visibleGoods","sort","prevGood","currGood","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","className","type","classNames","onClick","sortByType","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,MAAQ,WACN,EAAKD,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAfzB,gDAmBE,SAAWD,GACTK,KAAKF,SAAS,CAAEH,eApBpB,oBAuBE,WAAU,IAAD,OACP,EAAiCK,KAAKP,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdM,EAAiBN,IAAaL,EAASM,MAAQF,EAC/CQ,EApDH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQZ,GACN,KAAKL,EAASkB,SACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKjB,EAASoB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QACE,OAAO,MAITjB,GACFU,EAAaP,UAGRO,EA6BeQ,CAAkBrB,EAAiBS,KAAKP,OAE5D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYpB,IAAaL,EAASkB,WAGtCQ,QAAS,kBAAM,EAAKC,WAAW3B,EAASkB,WAR1C,iCAaA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYpB,IAAaL,EAASoB,SAGtCM,QAAS,kBAAM,EAAKC,WAAW3B,EAASoB,SAR1C,4BAaA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAarB,IAGjBsB,QAAShB,KAAKH,QARhB,qBAaCI,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKD,MAHhB,sBAUJ,6BACGG,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAnFpC,GAAyBC,IAAMC,WCpD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d2cf9b95.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGood, currGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prevGood.localeCompare(currGood);\n\n      case SortType.LENGTH:\n        return prevGood.length - currGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: ReorderOptions = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  sortByType(sortType: SortType) {\n    this.setState({ sortType });\n  }\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const addResetButton = sortType !== SortType.NONE || isReversed;\n    const goodsToShow = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.sortByType(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.sortByType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {addResetButton && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goodsToShow.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}